"use strict";(self.webpackChunkspringwolf_docs=self.webpackChunkspringwolf_docs||[]).push([[180],{584:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"configuration/customizing","title":"Customizing","description":"Adding and changing functionality of Springwolf is easy.","source":"@site/docs/configuration/customizing.md","sourceDirName":"configuration","slug":"/configuration/customizing","permalink":"/docs/configuration/customizing","draft":false,"unlisted":false,"editUrl":"https://github.com/springwolf/springwolf.github.io/edit/master/docs/configuration/customizing.md","tags":[],"version":"current","sidebarPosition":80,"frontMatter":{"sidebar_position":80},"sidebar":"defaultSidebar","previous":{"title":"Headers","permalink":"/docs/configuration/documenting-headers"},"next":{"title":"Static Generation","permalink":"/docs/static-generation"}}');var o=i(4848),s=i(8453);const a={sidebar_position:80},r="Customizing",c={},l=[{value:"<code>AsyncApiCustomizer</code> - Full AsyncAPI document",id:"asyncapicustomizer---full-asyncapi-document",level:2},{value:"<code>OperationCustomizer</code> - Operation object",id:"operationcustomizer---operation-object",level:2},{value:"ObjectMapper in <code>DefaultAsyncApiSerializerService</code>",id:"objectmapper-in-defaultasyncapiserializerservice",level:2},{value:"<code>ChannelScanners</code> - Channel detection",id:"channelscanners---channel-detection",level:2},{value:"Customize internal behavior",id:"customize-internal-behavior",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"customizing",children:"Customizing"})}),"\n",(0,o.jsxs)(n.p,{children:["Adding and changing functionality of Springwolf is easy.\nThe ",(0,o.jsx)(n.a,{href:"/docs/configuration/",children:"configuration"})," page mentions the existing ones."]}),"\n",(0,o.jsxs)(n.p,{children:["When you feel that Springwolf is missing a feature, you are able to add it yourself.\nTo learn more about how Springwolf works, look ",(0,o.jsx)(n.a,{href:"/docs/behind-the-scenes",children:"behind the scenes"}),"."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["Please let us know on GitHub or Discord, so that other people can benefit from it as well.\n",(0,o.jsx)(n.a,{href:"https://github.com/springwolf/springwolf-core/blob/master/CONTRIBUTING.md",children:"Contributions are welcome, here are some basic tips"}),"."]})}),"\n",(0,o.jsx)(n.p,{children:"Springwolf uses interfaces to allow to inject functionality at integration points.\nSpringwolf provides default implementation, but those can be replaced.\nAll default implementations are Spring managed beans, which can be overridden."}),"\n",(0,o.jsxs)(n.h2,{id:"asyncapicustomizer---full-asyncapi-document",children:[(0,o.jsx)(n.code,{children:"AsyncApiCustomizer"})," - Full AsyncAPI document"]}),"\n",(0,o.jsxs)(n.p,{children:["By implementing the ",(0,o.jsx)(n.code,{children:"AsyncApiCustomizer"})," interface, the AsyncAPI document can be modified after Springwolf has done all the scanning and has built the document.\nIt's the final interception point before the document is available to the user."]}),"\n",(0,o.jsx)(n.p,{children:"For example, the title can be adjusted - although this should be done through the configuration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Component\npublic class AsyncApiTitleCustomizer implements AsyncApiCustomizer {\n    @Override\n    public void customize(AsyncAPI asyncAPI) {\n         asyncAPI.getInfo().setTitle("Title set through customizer");\n    }\n}\n'})}),"\n",(0,o.jsxs)(n.h2,{id:"operationcustomizer---operation-object",children:[(0,o.jsx)(n.code,{children:"OperationCustomizer"})," - Operation object"]}),"\n",(0,o.jsxs)(n.p,{children:["By implementing the ",(0,o.jsx)(n.code,{children:"OperationCustomizer"})," interface, the Operation object can be modified after Springwolf has scanned an\nannotated method and extracted the data."]}),"\n",(0,o.jsxs)(n.p,{children:["It's possible to create multiple implementations of ",(0,o.jsx)(n.code,{children:"OperationCustomizer"}),".\nThe order of execution can be controlled by the ",(0,o.jsx)(n.code,{children:"@Order"})," annotation of Spring."]}),"\n",(0,o.jsxs)(n.p,{children:["An example to conditionally add a custom AsyncAPI ",(0,o.jsx)(n.code,{children:"tag"})," for Kafka batch listeners is shown below:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Component\npublic class TagCustomizer implements OperationCustomizer {\n\n    @Override\n    public void customize(Operation operation, Method method) {\n        KafkaListener annotation = AnnotationScannerUtil.findAnnotation(KafkaListener.class, method);\n        if (annotation != null && "true".equals(annotation.batch())) {\n            Tag tag = new Tag();\n            tag.setName("batch");\n\n            operation.getTags().add(tag);\n        }\n    }\n}\n'})}),"\n",(0,o.jsxs)(n.h2,{id:"objectmapper-in-defaultasyncapiserializerservice",children:["ObjectMapper in ",(0,o.jsx)(n.code,{children:"DefaultAsyncApiSerializerService"})]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"DefaultAsyncApiSerializerService"})," is responsible for serializing the AsyncAPI document into a ",(0,o.jsx)(n.code,{children:"String"})," for the Controller."]}),"\n",(0,o.jsxs)(n.p,{children:["Use ",(0,o.jsx)(n.code,{children:"DefaultAsyncApiSerializerService#getJsonObjectMapper()"})," and ",(0,o.jsx)(n.code,{children:"DefaultAsyncApiSerializerService#getYamlObjectMapper()"})," to customize the ",(0,o.jsx)(n.code,{children:"ObjectMapper"}),"."]}),"\n",(0,o.jsxs)(n.h2,{id:"channelscanners---channel-detection",children:[(0,o.jsx)(n.code,{children:"ChannelScanners"})," - Channel detection"]}),"\n",(0,o.jsxs)(n.p,{children:["All ",(0,o.jsx)(n.code,{children:"ChannelScanner"})," beans are called to scan for channels.\nThis interface is helpful when a protocol currently unsupported by Springwolf is used.\nRemember to register all payloads in the ",(0,o.jsx)(n.code,{children:"ComponentsService"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"customize-internal-behavior",children:"Customize internal behavior"}),"\n",(0,o.jsxs)(n.admonition,{type:"note",children:[(0,o.jsxs)(n.p,{children:["Replacing Springwolf beans with custom implementations is for experts only.\n",(0,o.jsx)(n.strong,{children:"No"})," support is offered for using internal API."]}),(0,o.jsx)(n.p,{children:"Custom implementations may break during updates without notice."})]}),"\n",(0,o.jsxs)(n.p,{children:["Springwolf uses ",(0,o.jsx)(n.code,{children:"@ConditionalOnMissingBean"})," annotations for most internal Spring beans.\nIf you have a special use-case that requires custom logic,\nyou can replace almost every Springwolf bean by adding your custom implementation as a bean to the Spring context."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(6540);const o={},s=t.createContext(o);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);